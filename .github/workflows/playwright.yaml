name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      env:
        TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        REPORT_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/reports/${{ github.run_number }}
        TEAMS_MENTION_ON_FAILURE: ${{ secrets.TEAMS_MENTION_ON_FAILURE }}
      run: npm test
      continue-on-error: true

    - name: Generate Allure Report
      if: always()
      run: npm run allure:generate

    - name: Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30

    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

    - name: Checkout gh-pages branch
      if: always()
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages-content

    - name: Prepare reports directory
      if: always()
      run: |
        mkdir -p gh-pages-content/reports/${{ github.run_number }}
        cp -r allure-report/* gh-pages-content/reports/${{ github.run_number }}/

    - name: Generate Reports Index
      if: always()
      run: |
        cd gh-pages-content
        
        # Copy the index template from repo
        cp ../scripts/reports-index.html index.html || echo "No template found, using default"
        
        # Get list of all report directories and create JSON
        if [ -d "reports" ]; then
          REPORTS=$(ls -1 reports | sort -rn)
        else
          REPORTS=""
        fi
        
        echo '{"reports":[' > reports-data.json
        FIRST=true
        for report in $REPORTS; do
          [ "$FIRST" = false ] && echo "," >> reports-data.json
          echo "{\"runNumber\":\"$report\",\"timestamp\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"url\":\"reports/$report/index.html\"}" >> reports-data.json
          FIRST=false
        done
        echo ']}' >> reports-data.json

    - name: Deploy to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./gh-pages-content
        keep_files: true
        force_orphan: false